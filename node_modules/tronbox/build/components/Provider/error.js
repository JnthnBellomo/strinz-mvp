"use strict";var _interopRequireDefault=require("@babel/runtime/helpers/interopRequireDefault");var _createClass2=_interopRequireDefault(require("@babel/runtime/helpers/createClass"));var _classCallCheck2=_interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));var _possibleConstructorReturn2=_interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));var _getPrototypeOf2=_interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));var _inherits2=_interopRequireDefault(require("@babel/runtime/helpers/inherits"));function _callSuper(t,o,e){return o=(0,_getPrototypeOf2["default"])(o),(0,_possibleConstructorReturn2["default"])(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],(0,_getPrototypeOf2["default"])(t).constructor):o.apply(t,e))}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}))}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t})()}var TruffleError=require("@truffle/error");var NOT_CONNECTED_MESSAGE="Invalid JSON RPC response: \"\"";var ProviderError=function(_TruffleError){function ProviderError(message){var _this;(0,_classCallCheck2["default"])(this,ProviderError);if(message===NOT_CONNECTED_MESSAGE){message="Could not connect to your Ethereum client. "+"Please check that your Ethereum client:\n"+"    - is running\n"+"    - is accepting RPC connections (i.e., \"--rpc\" option is used in geth)\n"+"    - is accessible over the network\n"+"    - is properly configured in your tronbox configuration file (tronbox.js)\n"}_this=_callSuper(this,ProviderError,[message]);_this.message=message;return _this}(0,_inherits2["default"])(ProviderError,_TruffleError);return(0,_createClass2["default"])(ProviderError)}(TruffleError);module.exports=ProviderError;